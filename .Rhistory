{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
quantile(X,1-alpha)
alpha=0.95
quantile(X,1-alpha)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-quantile(X,1-alpha)
return(abs(VaR))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
VaR<-quantile(X,1-alpha)
VaR
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-quantile(X,1-alpha)
return(abs(VaR[2,1]))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-quantile(X,1-alpha)
return(abs(VaR$value))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-quantile(X,1-alpha)
return(abs(VaR$value[2]))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-unname(quantile(X,1-alpha))
return(abs(VaR))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
unname(quantile(X,1-alpha))
RM(X,0.95,measure='VaR')
VaR<-unname(quantile(X,1-alpha))
VaR
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-unname(quantile(X,1-alpha))
return(abs(VaR[1]))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
VaR<-unname(quantile(X,1-alpha)
VaR
VaR
abs(VaR[1])
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='CVaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='CVaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.95,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.8,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-unname(quantile(X,1-alpha))
return(abs(VaR[1]))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.8,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
VaR<-unname(quantile(X,1-alpha))
VaR<
VaR<
VaR
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.8,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-quantile(X,1-alpha)
return(abs(VaR))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.8,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
abs(VaR)
RM(X,0.8,measure='VaR')
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-quantile(X,1-alpha)
return(abs(VaR))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.8,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
RM<-function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-quantile(X,1-alpha)
return(abs(VaR))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.8,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-unname(quantile(X,1-alpha))
return(abs(VaR))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.8,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
function(X,alpha,measure=c('VaR','CVaR','Distortion','Shortfall'),lambda){
if(measure=='VaR')
{VaR<-unname(quantile(X,1-alpha))
return(abs(VaR))
}
if(measure=='CVaR')
{f=function(x)
x+1/(1-alpha)*positive.mean(X,x)
CVaR=optimize(f,lower = quantile(X,1-alpha),upper = max(X))
return(CVaR$objective)
}
if(measure=='Distortion')
{
f=function(x)
quantile(X,1-x)*3*x^2
D=integrate(f,0,1)$value
return(abs(D))
}
if(measure=='Shortfall')
{
f=function(x)
mean(-exp(-(X+x))>=-lambda)
S=optimize(f,lower = 0,upper = max(X))
return(S$objective)
}
}
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.9,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
VaR<-unname(quantile(X,1-alpha))
abs(VaR)
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.9,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
library(StatComp22001)
set.seed(1234)
X<-rnorm(100,0,4)
RM(X,0.9,measure='VaR')
RM(X,0.9,measure='CVaR')
RM(X,measure='Distortion')
RM(X,measure='Shortfall',lambda=20)
RM(X,0.9,measure='VaR')
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build(vignettes=FALSE)
install.packages('D:/Rp/StatComp22001_1.0.tar.gz',repo=NULL)
install.packages('D:/Rp/StatComp22001_1.0.tar.gz',repo=NULL)
remove.packages("StatComp22001")
install.packages('D:/Rp/StatComp22001_1.0.tar.gz',repo=NULL)
remove.packages("StatComp22001")
devtools::build(vignettes=FALSE)
install.packages('D:/Rp/StatComp22001_1.0.tar.gz',repo=NULL)
remove.packages("StatComp22001")
devtools::build_vignettes()
devtools::build(vignettes=FALSE)
install.packages('D:/Rp/StatComp22001_1.0.tar.gz',repo=NULL)
devtools::build(vignettes=FALSE)
remove.packages("StatComp22001")
install.packages('D:/Rp/StatComp22001_1.0.tar.gz',repo=NULL)
